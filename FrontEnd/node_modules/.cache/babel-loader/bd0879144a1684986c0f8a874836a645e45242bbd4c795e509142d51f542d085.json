{"ast":null,"code":"// This file is autogenerated. It's used to publish ESM to npm.\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\nconst trimLeft = /^\\s+/;\nconst trimRight = /\\s+$/;\nfunction tinycolor(color, opts) {\n  color = color ? color : \"\";\n  opts = opts || {};\n\n  // If input is already a tinycolor, return itself\n  if (color instanceof tinycolor) {\n    return color;\n  }\n  // If we are called as a function, call using new instead\n  if (!(this instanceof tinycolor)) {\n    return new tinycolor(color, opts);\n  }\n  var rgb = inputToRGB(color);\n  this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;\n  this._gradientType = opts.gradientType;\n\n  // Don't let the range of [0,255] come back in [0,1].\n  // Potentially lose a little bit of precision here, but will fix issues where\n  // .5 gets interpreted as half of the total, instead of half of 1\n  // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n  if (this._r < 1) this._r = Math.round(this._r);\n  if (this._g < 1) this._g = Math.round(this._g);\n  if (this._b < 1) this._b = Math.round(this._b);\n  this._ok = rgb.ok;\n}\ntinycolor.prototype = {\n  isDark: function () {\n    return this.getBrightness() < 128;\n  },\n  isLight: function () {\n    return !this.isDark();\n  },\n  isValid: function () {\n    return this._ok;\n  },\n  getOriginalInput: function () {\n    return this._originalInput;\n  },\n  getFormat: function () {\n    return this._format;\n  },\n  getAlpha: function () {\n    return this._a;\n  },\n  getBrightness: function () {\n    //http://www.w3.org/TR/AERT#color-contrast\n    var rgb = this.toRgb();\n    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n  },\n  getLuminance: function () {\n    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    var rgb = this.toRgb();\n    var RsRGB, GsRGB, BsRGB, R, G, B;\n    RsRGB = rgb.r / 255;\n    GsRGB = rgb.g / 255;\n    BsRGB = rgb.b / 255;\n    if (RsRGB <= 0.03928) R = RsRGB / 12.92;else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n    if (GsRGB <= 0.03928) G = GsRGB / 12.92;else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n    if (BsRGB <= 0.03928) B = BsRGB / 12.92;else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  },\n  setAlpha: function (value) {\n    this._a = boundAlpha(value);\n    this._roundA = Math.round(100 * this._a) / 100;\n    return this;\n  },\n  toHsv: function () {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    return {\n      h: hsv.h * 360,\n      s: hsv.s,\n      v: hsv.v,\n      a: this._a\n    };\n  },\n  toHsvString: function () {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    var h = Math.round(hsv.h * 360),\n      s = Math.round(hsv.s * 100),\n      v = Math.round(hsv.v * 100);\n    return this._a == 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n  },\n  toHsl: function () {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    return {\n      h: hsl.h * 360,\n      s: hsl.s,\n      l: hsl.l,\n      a: this._a\n    };\n  },\n  toHslString: function () {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    var h = Math.round(hsl.h * 360),\n      s = Math.round(hsl.s * 100),\n      l = Math.round(hsl.l * 100);\n    return this._a == 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n  },\n  toHex: function (allow3Char) {\n    return rgbToHex(this._r, this._g, this._b, allow3Char);\n  },\n  toHexString: function (allow3Char) {\n    return \"#\" + this.toHex(allow3Char);\n  },\n  toHex8: function (allow4Char) {\n    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n  },\n  toHex8String: function (allow4Char) {\n    return \"#\" + this.toHex8(allow4Char);\n  },\n  toRgb: function () {\n    return {\n      r: Math.round(this._r),\n      g: Math.round(this._g),\n      b: Math.round(this._b),\n      a: this._a\n    };\n  },\n  toRgbString: function () {\n    return this._a == 1 ? \"rgb(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \")\" : \"rgba(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \", \" + this._roundA + \")\";\n  },\n  toPercentageRgb: function () {\n    return {\n      r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n      g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n      b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n      a: this._a\n    };\n  },\n  toPercentageRgbString: function () {\n    return this._a == 1 ? \"rgb(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%)\" : \"rgba(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n  },\n  toName: function () {\n    if (this._a === 0) {\n      return \"transparent\";\n    }\n    if (this._a < 1) {\n      return false;\n    }\n    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n  },\n  toFilter: function (secondColor) {\n    var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n    var secondHex8String = hex8String;\n    var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n    if (secondColor) {\n      var s = tinycolor(secondColor);\n      secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n    }\n    return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n  },\n  toString: function (format) {\n    var formatSet = !!format;\n    format = format || this._format;\n    var formattedString = false;\n    var hasAlpha = this._a < 1 && this._a >= 0;\n    var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n    if (needsAlphaFormat) {\n      // Special case for \"transparent\", all other non-alpha formats\n      // will return rgba when there is transparency.\n      if (format === \"name\" && this._a === 0) {\n        return this.toName();\n      }\n      return this.toRgbString();\n    }\n    if (format === \"rgb\") {\n      formattedString = this.toRgbString();\n    }\n    if (format === \"prgb\") {\n      formattedString = this.toPercentageRgbString();\n    }\n    if (format === \"hex\" || format === \"hex6\") {\n      formattedString = this.toHexString();\n    }\n    if (format === \"hex3\") {\n      formattedString = this.toHexString(true);\n    }\n    if (format === \"hex4\") {\n      formattedString = this.toHex8String(true);\n    }\n    if (format === \"hex8\") {\n      formattedString = this.toHex8String();\n    }\n    if (format === \"name\") {\n      formattedString = this.toName();\n    }\n    if (format === \"hsl\") {\n      formattedString = this.toHslString();\n    }\n    if (format === \"hsv\") {\n      formattedString = this.toHsvString();\n    }\n    return formattedString || this.toHexString();\n  },\n  clone: function () {\n    return tinycolor(this.toString());\n  },\n  _applyModification: function (fn, args) {\n    var color = fn.apply(null, [this].concat([].slice.call(args)));\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this.setAlpha(color._a);\n    return this;\n  },\n  lighten: function () {\n    return this._applyModification(lighten, arguments);\n  },\n  brighten: function () {\n    return this._applyModification(brighten, arguments);\n  },\n  darken: function () {\n    return this._applyModification(darken, arguments);\n  },\n  desaturate: function () {\n    return this._applyModification(desaturate, arguments);\n  },\n  saturate: function () {\n    return this._applyModification(saturate, arguments);\n  },\n  greyscale: function () {\n    return this._applyModification(greyscale, arguments);\n  },\n  spin: function () {\n    return this._applyModification(spin, arguments);\n  },\n  _applyCombination: function (fn, args) {\n    return fn.apply(null, [this].concat([].slice.call(args)));\n  },\n  analogous: function () {\n    return this._applyCombination(analogous, arguments);\n  },\n  complement: function () {\n    return this._applyCombination(complement, arguments);\n  },\n  monochromatic: function () {\n    return this._applyCombination(monochromatic, arguments);\n  },\n  splitcomplement: function () {\n    return this._applyCombination(splitcomplement, arguments);\n  },\n  // Disabled until https://github.com/bgrins/TinyColor/issues/254\n  // polyad: function (number) {\n  //   return this._applyCombination(polyad, [number]);\n  // },\n  triad: function () {\n    return this._applyCombination(polyad, [3]);\n  },\n  tetrad: function () {\n    return this._applyCombination(polyad, [4]);\n  }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function (color, opts) {\n  if (typeof color == \"object\") {\n    var newColor = {};\n    for (var i in color) {\n      if (color.hasOwnProperty(i)) {\n        if (i === \"a\") {\n          newColor[i] = color[i];\n        } else {\n          newColor[i] = convertToPercentage(color[i]);\n        }\n      }\n    }\n    color = newColor;\n  }\n  return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n  var rgb = {\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  var a = 1;\n  var s = null;\n  var v = null;\n  var l = null;\n  var ok = false;\n  var format = false;\n  if (typeof color == \"string\") {\n    color = stringInputToObject(color);\n  }\n  if (typeof color == \"object\") {\n    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n      rgb = rgbToRgb(color.r, color.g, color.b);\n      ok = true;\n      format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n      s = convertToPercentage(color.s);\n      v = convertToPercentage(color.v);\n      rgb = hsvToRgb(color.h, s, v);\n      ok = true;\n      format = \"hsv\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n      s = convertToPercentage(color.s);\n      l = convertToPercentage(color.l);\n      rgb = hslToRgb(color.h, s, l);\n      ok = true;\n      format = \"hsl\";\n    }\n    if (color.hasOwnProperty(\"a\")) {\n      a = color.a;\n    }\n  }\n  a = boundAlpha(a);\n  return {\n    ok: ok,\n    format: color.format || format,\n    r: Math.min(255, Math.max(rgb.r, 0)),\n    g: Math.min(255, Math.max(rgb.g, 0)),\n    b: Math.min(255, Math.max(rgb.b, 0)),\n    a: a\n  };\n}\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b) {\n  return {\n    r: bound01(r, 255) * 255,\n    g: bound01(g, 255) * 255,\n    b: bound01(b, 255) * 255\n  };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    l = (max + min) / 2;\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    l: l\n  };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n  h = bound01(h, 360);\n  s = bound01(s, 100);\n  l = bound01(l, 100);\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    v = max;\n  var d = max - min;\n  s = max === 0 ? 0 : d / max;\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return {\n    h: h,\n    s: s,\n    v: v\n  };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hsvToRgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n  var i = Math.floor(h),\n    f = h - i,\n    p = v * (1 - s),\n    q = v * (1 - f * s),\n    t = v * (1 - (1 - f) * s),\n    mod = i % 6,\n    r = [v, q, p, p, t, v][mod],\n    g = [t, v, v, q, p, p][mod],\n    b = [p, p, t, v, v, q][mod];\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n\n  // Return a 3 character hex if possible\n  if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n  }\n  return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n  var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))];\n\n  // Return a 4 character hex if possible\n  if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n  }\n  return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n  var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n  return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n  if (!color1 || !color2) return false;\n  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\ntinycolor.random = function () {\n  return tinycolor.fromRatio({\n    r: Math.random(),\n    g: Math.random(),\n    b: Math.random()\n  });\n};\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s -= amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\nfunction saturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s += amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\nfunction greyscale(color) {\n  return tinycolor(color).desaturate(100);\n}\nfunction lighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l += amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\nfunction brighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var rgb = tinycolor(color).toRgb();\n  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n  return tinycolor(rgb);\n}\nfunction darken(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l -= amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n  var hsl = tinycolor(color).toHsl();\n  var hue = (hsl.h + amount) % 360;\n  hsl.h = hue < 0 ? 360 + hue : hue;\n  return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n  var hsl = tinycolor(color).toHsl();\n  hsl.h = (hsl.h + 180) % 360;\n  return tinycolor(hsl);\n}\nfunction polyad(color, number) {\n  if (isNaN(number) || number <= 0) {\n    throw new Error(\"Argument to polyad must be a positive number\");\n  }\n  var hsl = tinycolor(color).toHsl();\n  var result = [tinycolor(color)];\n  var step = 360 / number;\n  for (var i = 1; i < number; i++) {\n    result.push(tinycolor({\n      h: (hsl.h + i * step) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }));\n  }\n  return result;\n}\nfunction splitcomplement(color) {\n  var hsl = tinycolor(color).toHsl();\n  var h = hsl.h;\n  return [tinycolor(color), tinycolor({\n    h: (h + 72) % 360,\n    s: hsl.s,\n    l: hsl.l\n  }), tinycolor({\n    h: (h + 216) % 360,\n    s: hsl.s,\n    l: hsl.l\n  })];\n}\nfunction analogous(color, results, slices) {\n  results = results || 6;\n  slices = slices || 30;\n  var hsl = tinycolor(color).toHsl();\n  var part = 360 / slices;\n  var ret = [tinycolor(color)];\n  for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n    hsl.h = (hsl.h + part) % 360;\n    ret.push(tinycolor(hsl));\n  }\n  return ret;\n}\nfunction monochromatic(color, results) {\n  results = results || 6;\n  var hsv = tinycolor(color).toHsv();\n  var h = hsv.h,\n    s = hsv.s,\n    v = hsv.v;\n  var ret = [];\n  var modification = 1 / results;\n  while (results--) {\n    ret.push(tinycolor({\n      h: h,\n      s: s,\n      v: v\n    }));\n    v = (v + modification) % 1;\n  }\n  return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function (color1, color2, amount) {\n  amount = amount === 0 ? 0 : amount || 50;\n  var rgb1 = tinycolor(color1).toRgb();\n  var rgb2 = tinycolor(color2).toRgb();\n  var p = amount / 100;\n  var rgba = {\n    r: (rgb2.r - rgb1.r) * p + rgb1.r,\n    g: (rgb2.g - rgb1.g) * p + rgb1.g,\n    b: (rgb2.b - rgb1.b) * p + rgb1.b,\n    a: (rgb2.a - rgb1.a) * p + rgb1.a\n  };\n  return tinycolor(rgba);\n};\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function (color1, color2) {\n  var c1 = tinycolor(color1);\n  var c2 = tinycolor(color2);\n  return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function (color1, color2, wcag2) {\n  var readability = tinycolor.readability(color1, color2);\n  var wcag2Parms, out;\n  out = false;\n  wcag2Parms = validateWCAG2Parms(wcag2);\n  switch (wcag2Parms.level + wcag2Parms.size) {\n    case \"AAsmall\":\n    case \"AAAlarge\":\n      out = readability >= 4.5;\n      break;\n    case \"AAlarge\":\n      out = readability >= 3;\n      break;\n    case \"AAAsmall\":\n      out = readability >= 7;\n      break;\n  }\n  return out;\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function (baseColor, colorList, args) {\n  var bestColor = null;\n  var bestScore = 0;\n  var readability;\n  var includeFallbackColors, level, size;\n  args = args || {};\n  includeFallbackColors = args.includeFallbackColors;\n  level = args.level;\n  size = args.size;\n  for (var i = 0; i < colorList.length; i++) {\n    readability = tinycolor.readability(baseColor, colorList[i]);\n    if (readability > bestScore) {\n      bestScore = readability;\n      bestColor = tinycolor(colorList[i]);\n    }\n  }\n  if (tinycolor.isReadable(baseColor, bestColor, {\n    level: level,\n    size: size\n  }) || !includeFallbackColors) {\n    return bestColor;\n  } else {\n    args.includeFallbackColors = false;\n    return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n  }\n};\n\n// Big List of Colors\n// ------------------\n// <https://www.w3.org/TR/css-color-4/#named-colors>\nvar names = tinycolor.names = {\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"0ff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"00f\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  burntsienna: \"ea7e5d\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"0ff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkgrey: \"a9a9a9\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkslategrey: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dimgrey: \"696969\",\n  dodgerblue: \"1e90ff\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"f0f\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  grey: \"808080\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgray: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightgrey: \"d3d3d3\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslategray: \"789\",\n  lightslategrey: \"789\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"0f0\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"f0f\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370db\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"db7093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  rebeccapurple: \"663399\",\n  red: \"f00\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  slategrey: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  wheat: \"f5deb3\",\n  white: \"fff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ff0\",\n  yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n  var flipped = {};\n  for (var i in o) {\n    if (o.hasOwnProperty(i)) {\n      flipped[o[i]] = i;\n    }\n  }\n  return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n  a = parseFloat(a);\n  if (isNaN(a) || a < 0 || a > 1) {\n    a = 1;\n  }\n  return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n  if (isOnePointZero(n)) n = \"100%\";\n  var processPercent = isPercentage(n);\n  n = Math.min(max, Math.max(0, parseFloat(n)));\n\n  // Automatically convert percentage into number\n  if (processPercent) {\n    n = parseInt(n * max, 10) / 100;\n  }\n\n  // Handle floating point rounding errors\n  if (Math.abs(n - max) < 0.000001) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn't already\n  return n % max / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n  return Math.min(1, Math.max(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n  return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n  return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n  return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n  return c.length == 1 ? \"0\" + c : \"\" + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n  if (n <= 1) {\n    n = n * 100 + \"%\";\n  }\n  return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n  return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n  return parseIntFromHex(h) / 255;\n}\nvar matchers = function () {\n  // <http://www.w3.org/TR/css3-values/#integers>\n  var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n  // <http://www.w3.org/TR/css3-values/#number-value>\n  var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n  // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n  var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n  // Actual matching.\n  // Parentheses and commas are optional, but not required.\n  // Whitespace can take the place of commas or opening paren\n  var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n  var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n  return {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n  };\n}();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n  return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n  color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n  var named = false;\n  if (names[color]) {\n    color = names[color];\n    named = true;\n  } else if (color == \"transparent\") {\n    return {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 0,\n      format: \"name\"\n    };\n  }\n\n  // Try to match string input using regular expressions.\n  // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n  // Just return an object and let the conversion functions handle that.\n  // This way the result will be the same whether the tinycolor is initialized with string or object.\n  var match;\n  if (match = matchers.rgb.exec(color)) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3]\n    };\n  }\n  if (match = matchers.rgba.exec(color)) {\n    return {\n      r: match[1],\n      g: match[2],\n      b: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hsl.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3]\n    };\n  }\n  if (match = matchers.hsla.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      l: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hsv.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3]\n    };\n  }\n  if (match = matchers.hsva.exec(color)) {\n    return {\n      h: match[1],\n      s: match[2],\n      v: match[3],\n      a: match[4]\n    };\n  }\n  if (match = matchers.hex8.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: convertHexToDecimal(match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  if (match = matchers.hex6.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  if (match = matchers.hex4.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      a: convertHexToDecimal(match[4] + \"\" + match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  if (match = matchers.hex3.exec(color)) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  return false;\n}\nfunction validateWCAG2Parms(parms) {\n  // return valid WCAG2 parms for isReadable.\n  // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n  var level, size;\n  parms = parms || {\n    level: \"AA\",\n    size: \"small\"\n  };\n  level = (parms.level || \"AA\").toUpperCase();\n  size = (parms.size || \"small\").toLowerCase();\n  if (level !== \"AA\" && level !== \"AAA\") {\n    level = \"AA\";\n  }\n  if (size !== \"small\" && size !== \"large\") {\n    size = \"small\";\n  }\n  return {\n    level: level,\n    size: size\n  };\n}\nexport { tinycolor as default };","map":{"version":3,"names":["trimLeft","trimRight","tinycolor","color","opts","rgb","inputToRGB","_originalInput","_r","r","_g","g","_b","b","_a","a","_roundA","Math","round","_format","format","_gradientType","gradientType","_ok","ok","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","boundAlpha","toHsv","hsv","rgbToHsv","h","s","v","toHsvString","toHsl","hsl","rgbToHsl","l","toHslString","toHex","allow3Char","rgbToHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","bound01","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","rgbaToArgbHex","secondHex8String","toString","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","call","lighten","arguments","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","polyad","tetrad","fromRatio","newColor","i","hasOwnProperty","convertToPercentage","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","hsvToRgb","hslToRgb","min","max","d","hue2rgb","p","q","t","floor","f","mod","hex","pad2","charAt","join","convertDecimalToHex","equals","color1","color2","random","amount","clamp01","hue","number","isNaN","Error","result","step","push","results","slices","part","ret","modification","mix","rgb1","rgb2","rgba","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","validateWCAG2Parms","level","size","mostReadable","baseColor","colorList","bestColor","bestScore","includeFallbackColors","length","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flip","o","flipped","parseFloat","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","convertHexToDecimal","matchers","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","hsla","hsva","hex3","hex6","hex4","hex8","exec","replace","toLowerCase","named","match","parms","toUpperCase","default"],"sources":["F:/FinalYearProject_ClientSection/FrontEnd/node_modules/tinycolor2/esm/tinycolor.js"],"sourcesContent":["// This file is autogenerated. It's used to publish ESM to npm.\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\nconst trimLeft = /^\\s+/;\nconst trimRight = /\\s+$/;\n\nfunction tinycolor(color, opts) {\n  color = color ? color : \"\";\n  opts = opts || {};\n\n  // If input is already a tinycolor, return itself\n  if (color instanceof tinycolor) {\n    return color;\n  }\n  // If we are called as a function, call using new instead\n  if (!(this instanceof tinycolor)) {\n    return new tinycolor(color, opts);\n  }\n\n  var rgb = inputToRGB(color);\n  (this._originalInput = color),\n    (this._r = rgb.r),\n    (this._g = rgb.g),\n    (this._b = rgb.b),\n    (this._a = rgb.a),\n    (this._roundA = Math.round(100 * this._a) / 100),\n    (this._format = opts.format || rgb.format);\n  this._gradientType = opts.gradientType;\n\n  // Don't let the range of [0,255] come back in [0,1].\n  // Potentially lose a little bit of precision here, but will fix issues where\n  // .5 gets interpreted as half of the total, instead of half of 1\n  // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n  if (this._r < 1) this._r = Math.round(this._r);\n  if (this._g < 1) this._g = Math.round(this._g);\n  if (this._b < 1) this._b = Math.round(this._b);\n\n  this._ok = rgb.ok;\n}\n\ntinycolor.prototype = {\n  isDark: function () {\n    return this.getBrightness() < 128;\n  },\n  isLight: function () {\n    return !this.isDark();\n  },\n  isValid: function () {\n    return this._ok;\n  },\n  getOriginalInput: function () {\n    return this._originalInput;\n  },\n  getFormat: function () {\n    return this._format;\n  },\n  getAlpha: function () {\n    return this._a;\n  },\n  getBrightness: function () {\n    //http://www.w3.org/TR/AERT#color-contrast\n    var rgb = this.toRgb();\n    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n  },\n  getLuminance: function () {\n    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n    var rgb = this.toRgb();\n    var RsRGB, GsRGB, BsRGB, R, G, B;\n    RsRGB = rgb.r / 255;\n    GsRGB = rgb.g / 255;\n    BsRGB = rgb.b / 255;\n\n    if (RsRGB <= 0.03928) R = RsRGB / 12.92;\n    else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n    if (GsRGB <= 0.03928) G = GsRGB / 12.92;\n    else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n    if (BsRGB <= 0.03928) B = BsRGB / 12.92;\n    else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  },\n  setAlpha: function (value) {\n    this._a = boundAlpha(value);\n    this._roundA = Math.round(100 * this._a) / 100;\n    return this;\n  },\n  toHsv: function () {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n  },\n  toHsvString: function () {\n    var hsv = rgbToHsv(this._r, this._g, this._b);\n    var h = Math.round(hsv.h * 360),\n      s = Math.round(hsv.s * 100),\n      v = Math.round(hsv.v * 100);\n    return this._a == 1\n      ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\"\n      : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n  },\n  toHsl: function () {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n  },\n  toHslString: function () {\n    var hsl = rgbToHsl(this._r, this._g, this._b);\n    var h = Math.round(hsl.h * 360),\n      s = Math.round(hsl.s * 100),\n      l = Math.round(hsl.l * 100);\n    return this._a == 1\n      ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\"\n      : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n  },\n  toHex: function (allow3Char) {\n    return rgbToHex(this._r, this._g, this._b, allow3Char);\n  },\n  toHexString: function (allow3Char) {\n    return \"#\" + this.toHex(allow3Char);\n  },\n  toHex8: function (allow4Char) {\n    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n  },\n  toHex8String: function (allow4Char) {\n    return \"#\" + this.toHex8(allow4Char);\n  },\n  toRgb: function () {\n    return {\n      r: Math.round(this._r),\n      g: Math.round(this._g),\n      b: Math.round(this._b),\n      a: this._a,\n    };\n  },\n  toRgbString: function () {\n    return this._a == 1\n      ? \"rgb(\" +\n          Math.round(this._r) +\n          \", \" +\n          Math.round(this._g) +\n          \", \" +\n          Math.round(this._b) +\n          \")\"\n      : \"rgba(\" +\n          Math.round(this._r) +\n          \", \" +\n          Math.round(this._g) +\n          \", \" +\n          Math.round(this._b) +\n          \", \" +\n          this._roundA +\n          \")\";\n  },\n  toPercentageRgb: function () {\n    return {\n      r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n      g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n      b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n      a: this._a,\n    };\n  },\n  toPercentageRgbString: function () {\n    return this._a == 1\n      ? \"rgb(\" +\n          Math.round(bound01(this._r, 255) * 100) +\n          \"%, \" +\n          Math.round(bound01(this._g, 255) * 100) +\n          \"%, \" +\n          Math.round(bound01(this._b, 255) * 100) +\n          \"%)\"\n      : \"rgba(\" +\n          Math.round(bound01(this._r, 255) * 100) +\n          \"%, \" +\n          Math.round(bound01(this._g, 255) * 100) +\n          \"%, \" +\n          Math.round(bound01(this._b, 255) * 100) +\n          \"%, \" +\n          this._roundA +\n          \")\";\n  },\n  toName: function () {\n    if (this._a === 0) {\n      return \"transparent\";\n    }\n\n    if (this._a < 1) {\n      return false;\n    }\n\n    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n  },\n  toFilter: function (secondColor) {\n    var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n    var secondHex8String = hex8String;\n    var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n    if (secondColor) {\n      var s = tinycolor(secondColor);\n      secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n    }\n\n    return (\n      \"progid:DXImageTransform.Microsoft.gradient(\" +\n      gradientType +\n      \"startColorstr=\" +\n      hex8String +\n      \",endColorstr=\" +\n      secondHex8String +\n      \")\"\n    );\n  },\n  toString: function (format) {\n    var formatSet = !!format;\n    format = format || this._format;\n\n    var formattedString = false;\n    var hasAlpha = this._a < 1 && this._a >= 0;\n    var needsAlphaFormat =\n      !formatSet &&\n      hasAlpha &&\n      (format === \"hex\" ||\n        format === \"hex6\" ||\n        format === \"hex3\" ||\n        format === \"hex4\" ||\n        format === \"hex8\" ||\n        format === \"name\");\n\n    if (needsAlphaFormat) {\n      // Special case for \"transparent\", all other non-alpha formats\n      // will return rgba when there is transparency.\n      if (format === \"name\" && this._a === 0) {\n        return this.toName();\n      }\n      return this.toRgbString();\n    }\n    if (format === \"rgb\") {\n      formattedString = this.toRgbString();\n    }\n    if (format === \"prgb\") {\n      formattedString = this.toPercentageRgbString();\n    }\n    if (format === \"hex\" || format === \"hex6\") {\n      formattedString = this.toHexString();\n    }\n    if (format === \"hex3\") {\n      formattedString = this.toHexString(true);\n    }\n    if (format === \"hex4\") {\n      formattedString = this.toHex8String(true);\n    }\n    if (format === \"hex8\") {\n      formattedString = this.toHex8String();\n    }\n    if (format === \"name\") {\n      formattedString = this.toName();\n    }\n    if (format === \"hsl\") {\n      formattedString = this.toHslString();\n    }\n    if (format === \"hsv\") {\n      formattedString = this.toHsvString();\n    }\n\n    return formattedString || this.toHexString();\n  },\n  clone: function () {\n    return tinycolor(this.toString());\n  },\n\n  _applyModification: function (fn, args) {\n    var color = fn.apply(null, [this].concat([].slice.call(args)));\n    this._r = color._r;\n    this._g = color._g;\n    this._b = color._b;\n    this.setAlpha(color._a);\n    return this;\n  },\n  lighten: function () {\n    return this._applyModification(lighten, arguments);\n  },\n  brighten: function () {\n    return this._applyModification(brighten, arguments);\n  },\n  darken: function () {\n    return this._applyModification(darken, arguments);\n  },\n  desaturate: function () {\n    return this._applyModification(desaturate, arguments);\n  },\n  saturate: function () {\n    return this._applyModification(saturate, arguments);\n  },\n  greyscale: function () {\n    return this._applyModification(greyscale, arguments);\n  },\n  spin: function () {\n    return this._applyModification(spin, arguments);\n  },\n\n  _applyCombination: function (fn, args) {\n    return fn.apply(null, [this].concat([].slice.call(args)));\n  },\n  analogous: function () {\n    return this._applyCombination(analogous, arguments);\n  },\n  complement: function () {\n    return this._applyCombination(complement, arguments);\n  },\n  monochromatic: function () {\n    return this._applyCombination(monochromatic, arguments);\n  },\n  splitcomplement: function () {\n    return this._applyCombination(splitcomplement, arguments);\n  },\n  // Disabled until https://github.com/bgrins/TinyColor/issues/254\n  // polyad: function (number) {\n  //   return this._applyCombination(polyad, [number]);\n  // },\n  triad: function () {\n    return this._applyCombination(polyad, [3]);\n  },\n  tetrad: function () {\n    return this._applyCombination(polyad, [4]);\n  },\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function (color, opts) {\n  if (typeof color == \"object\") {\n    var newColor = {};\n    for (var i in color) {\n      if (color.hasOwnProperty(i)) {\n        if (i === \"a\") {\n          newColor[i] = color[i];\n        } else {\n          newColor[i] = convertToPercentage(color[i]);\n        }\n      }\n    }\n    color = newColor;\n  }\n\n  return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n  var rgb = { r: 0, g: 0, b: 0 };\n  var a = 1;\n  var s = null;\n  var v = null;\n  var l = null;\n  var ok = false;\n  var format = false;\n\n  if (typeof color == \"string\") {\n    color = stringInputToObject(color);\n  }\n\n  if (typeof color == \"object\") {\n    if (\n      isValidCSSUnit(color.r) &&\n      isValidCSSUnit(color.g) &&\n      isValidCSSUnit(color.b)\n    ) {\n      rgb = rgbToRgb(color.r, color.g, color.b);\n      ok = true;\n      format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n    } else if (\n      isValidCSSUnit(color.h) &&\n      isValidCSSUnit(color.s) &&\n      isValidCSSUnit(color.v)\n    ) {\n      s = convertToPercentage(color.s);\n      v = convertToPercentage(color.v);\n      rgb = hsvToRgb(color.h, s, v);\n      ok = true;\n      format = \"hsv\";\n    } else if (\n      isValidCSSUnit(color.h) &&\n      isValidCSSUnit(color.s) &&\n      isValidCSSUnit(color.l)\n    ) {\n      s = convertToPercentage(color.s);\n      l = convertToPercentage(color.l);\n      rgb = hslToRgb(color.h, s, l);\n      ok = true;\n      format = \"hsl\";\n    }\n\n    if (color.hasOwnProperty(\"a\")) {\n      a = color.a;\n    }\n  }\n\n  a = boundAlpha(a);\n\n  return {\n    ok: ok,\n    format: color.format || format,\n    r: Math.min(255, Math.max(rgb.r, 0)),\n    g: Math.min(255, Math.max(rgb.g, 0)),\n    b: Math.min(255, Math.max(rgb.b, 0)),\n    a: a,\n  };\n}\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b) {\n  return {\n    r: bound01(r, 255) * 255,\n    g: bound01(g, 255) * 255,\n    b: bound01(b, 255) * 255,\n  };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    l = (max + min) / 2;\n\n  if (max == min) {\n    h = s = 0; // achromatic\n  } else {\n    var d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n\n  h = bound01(h, 360);\n  s = bound01(s, 100);\n  l = bound01(l, 100);\n\n  function hue2rgb(p, q, t) {\n    if (t < 0) t += 1;\n    if (t > 1) t -= 1;\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\n    if (t < 1 / 2) return q;\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n  }\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    var p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n  r = bound01(r, 255);\n  g = bound01(g, 255);\n  b = bound01(b, 255);\n\n  var max = Math.max(r, g, b),\n    min = Math.min(r, g, b);\n  var h,\n    s,\n    v = max;\n\n  var d = max - min;\n  s = max === 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hsvToRgb(h, s, v) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v = bound01(v, 100);\n\n  var i = Math.floor(h),\n    f = h - i,\n    p = v * (1 - s),\n    q = v * (1 - f * s),\n    t = v * (1 - (1 - f) * s),\n    mod = i % 6,\n    r = [v, q, p, p, t, v][mod],\n    g = [t, v, v, q, p, p][mod],\n    b = [p, p, t, v, v, q][mod];\n\n  return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n  var hex = [\n    pad2(Math.round(r).toString(16)),\n    pad2(Math.round(g).toString(16)),\n    pad2(Math.round(b).toString(16)),\n  ];\n\n  // Return a 3 character hex if possible\n  if (\n    allow3Char &&\n    hex[0].charAt(0) == hex[0].charAt(1) &&\n    hex[1].charAt(0) == hex[1].charAt(1) &&\n    hex[2].charAt(0) == hex[2].charAt(1)\n  ) {\n    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n  }\n\n  return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n  var hex = [\n    pad2(Math.round(r).toString(16)),\n    pad2(Math.round(g).toString(16)),\n    pad2(Math.round(b).toString(16)),\n    pad2(convertDecimalToHex(a)),\n  ];\n\n  // Return a 4 character hex if possible\n  if (\n    allow4Char &&\n    hex[0].charAt(0) == hex[0].charAt(1) &&\n    hex[1].charAt(0) == hex[1].charAt(1) &&\n    hex[2].charAt(0) == hex[2].charAt(1) &&\n    hex[3].charAt(0) == hex[3].charAt(1)\n  ) {\n    return (\n      hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0)\n    );\n  }\n\n  return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n  var hex = [\n    pad2(convertDecimalToHex(a)),\n    pad2(Math.round(r).toString(16)),\n    pad2(Math.round(g).toString(16)),\n    pad2(Math.round(b).toString(16)),\n  ];\n\n  return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n  if (!color1 || !color2) return false;\n  return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function () {\n  return tinycolor.fromRatio({\n    r: Math.random(),\n    g: Math.random(),\n    b: Math.random(),\n  });\n};\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s -= amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.s += amount / 100;\n  hsl.s = clamp01(hsl.s);\n  return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n  return tinycolor(color).desaturate(100);\n}\n\nfunction lighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l += amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var rgb = tinycolor(color).toRgb();\n  rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n  rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n  rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n  return tinycolor(rgb);\n}\n\nfunction darken(color, amount) {\n  amount = amount === 0 ? 0 : amount || 10;\n  var hsl = tinycolor(color).toHsl();\n  hsl.l -= amount / 100;\n  hsl.l = clamp01(hsl.l);\n  return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n  var hsl = tinycolor(color).toHsl();\n  var hue = (hsl.h + amount) % 360;\n  hsl.h = hue < 0 ? 360 + hue : hue;\n  return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n  var hsl = tinycolor(color).toHsl();\n  hsl.h = (hsl.h + 180) % 360;\n  return tinycolor(hsl);\n}\n\nfunction polyad(color, number) {\n  if (isNaN(number) || number <= 0) {\n    throw new Error(\"Argument to polyad must be a positive number\");\n  }\n  var hsl = tinycolor(color).toHsl();\n  var result = [tinycolor(color)];\n  var step = 360 / number;\n  for (var i = 1; i < number; i++) {\n    result.push(tinycolor({ h: (hsl.h + i * step) % 360, s: hsl.s, l: hsl.l }));\n  }\n\n  return result;\n}\n\nfunction splitcomplement(color) {\n  var hsl = tinycolor(color).toHsl();\n  var h = hsl.h;\n  return [\n    tinycolor(color),\n    tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n    tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n  ];\n}\n\nfunction analogous(color, results, slices) {\n  results = results || 6;\n  slices = slices || 30;\n\n  var hsl = tinycolor(color).toHsl();\n  var part = 360 / slices;\n  var ret = [tinycolor(color)];\n\n  for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results; ) {\n    hsl.h = (hsl.h + part) % 360;\n    ret.push(tinycolor(hsl));\n  }\n  return ret;\n}\n\nfunction monochromatic(color, results) {\n  results = results || 6;\n  var hsv = tinycolor(color).toHsv();\n  var h = hsv.h,\n    s = hsv.s,\n    v = hsv.v;\n  var ret = [];\n  var modification = 1 / results;\n\n  while (results--) {\n    ret.push(tinycolor({ h: h, s: s, v: v }));\n    v = (v + modification) % 1;\n  }\n\n  return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function (color1, color2, amount) {\n  amount = amount === 0 ? 0 : amount || 50;\n\n  var rgb1 = tinycolor(color1).toRgb();\n  var rgb2 = tinycolor(color2).toRgb();\n\n  var p = amount / 100;\n\n  var rgba = {\n    r: (rgb2.r - rgb1.r) * p + rgb1.r,\n    g: (rgb2.g - rgb1.g) * p + rgb1.g,\n    b: (rgb2.b - rgb1.b) * p + rgb1.b,\n    a: (rgb2.a - rgb1.a) * p + rgb1.a,\n  };\n\n  return tinycolor(rgba);\n};\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function (color1, color2) {\n  var c1 = tinycolor(color1);\n  var c2 = tinycolor(color2);\n  return (\n    (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) /\n    (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05)\n  );\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function (color1, color2, wcag2) {\n  var readability = tinycolor.readability(color1, color2);\n  var wcag2Parms, out;\n\n  out = false;\n\n  wcag2Parms = validateWCAG2Parms(wcag2);\n  switch (wcag2Parms.level + wcag2Parms.size) {\n    case \"AAsmall\":\n    case \"AAAlarge\":\n      out = readability >= 4.5;\n      break;\n    case \"AAlarge\":\n      out = readability >= 3;\n      break;\n    case \"AAAsmall\":\n      out = readability >= 7;\n      break;\n  }\n  return out;\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function (baseColor, colorList, args) {\n  var bestColor = null;\n  var bestScore = 0;\n  var readability;\n  var includeFallbackColors, level, size;\n  args = args || {};\n  includeFallbackColors = args.includeFallbackColors;\n  level = args.level;\n  size = args.size;\n\n  for (var i = 0; i < colorList.length; i++) {\n    readability = tinycolor.readability(baseColor, colorList[i]);\n    if (readability > bestScore) {\n      bestScore = readability;\n      bestColor = tinycolor(colorList[i]);\n    }\n  }\n\n  if (\n    tinycolor.isReadable(baseColor, bestColor, {\n      level: level,\n      size: size,\n    }) ||\n    !includeFallbackColors\n  ) {\n    return bestColor;\n  } else {\n    args.includeFallbackColors = false;\n    return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n  }\n};\n\n// Big List of Colors\n// ------------------\n// <https://www.w3.org/TR/css-color-4/#named-colors>\nvar names = (tinycolor.names = {\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"0ff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"00f\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  burntsienna: \"ea7e5d\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"0ff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkgrey: \"a9a9a9\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkslategrey: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dimgrey: \"696969\",\n  dodgerblue: \"1e90ff\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"f0f\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  grey: \"808080\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgray: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightgrey: \"d3d3d3\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslategray: \"789\",\n  lightslategrey: \"789\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"0f0\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"f0f\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370db\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"db7093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  rebeccapurple: \"663399\",\n  red: \"f00\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  slategrey: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  wheat: \"f5deb3\",\n  white: \"fff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ff0\",\n  yellowgreen: \"9acd32\",\n});\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = (tinycolor.hexNames = flip(names));\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n  var flipped = {};\n  for (var i in o) {\n    if (o.hasOwnProperty(i)) {\n      flipped[o[i]] = i;\n    }\n  }\n  return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n  a = parseFloat(a);\n\n  if (isNaN(a) || a < 0 || a > 1) {\n    a = 1;\n  }\n\n  return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n  if (isOnePointZero(n)) n = \"100%\";\n\n  var processPercent = isPercentage(n);\n  n = Math.min(max, Math.max(0, parseFloat(n)));\n\n  // Automatically convert percentage into number\n  if (processPercent) {\n    n = parseInt(n * max, 10) / 100;\n  }\n\n  // Handle floating point rounding errors\n  if (Math.abs(n - max) < 0.000001) {\n    return 1;\n  }\n\n  // Convert into [0, 1] range if it isn't already\n  return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n  return Math.min(1, Math.max(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n  return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n  return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n  return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n  return c.length == 1 ? \"0\" + c : \"\" + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n  if (n <= 1) {\n    n = n * 100 + \"%\";\n  }\n\n  return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n  return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n  return parseIntFromHex(h) / 255;\n}\n\nvar matchers = (function () {\n  // <http://www.w3.org/TR/css3-values/#integers>\n  var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n  // <http://www.w3.org/TR/css3-values/#number-value>\n  var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n  // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n  var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n  // Actual matching.\n  // Parentheses and commas are optional, but not required.\n  // Whitespace can take the place of commas or opening paren\n  var PERMISSIVE_MATCH3 =\n    \"[\\\\s|\\\\(]+(\" +\n    CSS_UNIT +\n    \")[,|\\\\s]+(\" +\n    CSS_UNIT +\n    \")[,|\\\\s]+(\" +\n    CSS_UNIT +\n    \")\\\\s*\\\\)?\";\n  var PERMISSIVE_MATCH4 =\n    \"[\\\\s|\\\\(]+(\" +\n    CSS_UNIT +\n    \")[,|\\\\s]+(\" +\n    CSS_UNIT +\n    \")[,|\\\\s]+(\" +\n    CSS_UNIT +\n    \")[,|\\\\s]+(\" +\n    CSS_UNIT +\n    \")\\\\s*\\\\)?\";\n\n  return {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n  };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n  return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n  color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n  var named = false;\n  if (names[color]) {\n    color = names[color];\n    named = true;\n  } else if (color == \"transparent\") {\n    return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n  }\n\n  // Try to match string input using regular expressions.\n  // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n  // Just return an object and let the conversion functions handle that.\n  // This way the result will be the same whether the tinycolor is initialized with string or object.\n  var match;\n  if ((match = matchers.rgb.exec(color))) {\n    return { r: match[1], g: match[2], b: match[3] };\n  }\n  if ((match = matchers.rgba.exec(color))) {\n    return { r: match[1], g: match[2], b: match[3], a: match[4] };\n  }\n  if ((match = matchers.hsl.exec(color))) {\n    return { h: match[1], s: match[2], l: match[3] };\n  }\n  if ((match = matchers.hsla.exec(color))) {\n    return { h: match[1], s: match[2], l: match[3], a: match[4] };\n  }\n  if ((match = matchers.hsv.exec(color))) {\n    return { h: match[1], s: match[2], v: match[3] };\n  }\n  if ((match = matchers.hsva.exec(color))) {\n    return { h: match[1], s: match[2], v: match[3], a: match[4] };\n  }\n  if ((match = matchers.hex8.exec(color))) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: convertHexToDecimal(match[4]),\n      format: named ? \"name\" : \"hex8\",\n    };\n  }\n  if ((match = matchers.hex6.exec(color))) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      format: named ? \"name\" : \"hex\",\n    };\n  }\n  if ((match = matchers.hex4.exec(color))) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      a: convertHexToDecimal(match[4] + \"\" + match[4]),\n      format: named ? \"name\" : \"hex8\",\n    };\n  }\n  if ((match = matchers.hex3.exec(color))) {\n    return {\n      r: parseIntFromHex(match[1] + \"\" + match[1]),\n      g: parseIntFromHex(match[2] + \"\" + match[2]),\n      b: parseIntFromHex(match[3] + \"\" + match[3]),\n      format: named ? \"name\" : \"hex\",\n    };\n  }\n\n  return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n  // return valid WCAG2 parms for isReadable.\n  // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n  var level, size;\n  parms = parms || { level: \"AA\", size: \"small\" };\n  level = (parms.level || \"AA\").toUpperCase();\n  size = (parms.size || \"small\").toLowerCase();\n  if (level !== \"AA\" && level !== \"AAA\") {\n    level = \"AA\";\n  }\n  if (size !== \"small\" && size !== \"large\") {\n    size = \"small\";\n  }\n  return { level: level, size: size };\n}\n\nexport { tinycolor as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}