{"ast":null,"code":"const animationProps = [\"animate\", \"exit\", \"variants\", \"whileHover\", \"whileTap\", \"whileFocus\", \"whileDrag\", \"whileInView\"];\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\nconst inViewProps = [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\", \"viewport\"];\n/**\r\n * A list of all valid MotionProps.\r\n *\r\n * @privateRemarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\nconst validMotionProps = new Set([\"initial\", \"style\", \"values\", \"variants\", \"transition\", \"transformTemplate\", \"transformValues\", \"custom\", \"inherit\", \"layout\", \"layoutId\", \"layoutDependency\", \"onLayoutAnimationStart\", \"onLayoutAnimationComplete\", \"onLayoutMeasure\", \"onBeforeLayoutMeasure\", \"onAnimationStart\", \"onAnimationComplete\", \"onUpdate\", \"onDragStart\", \"onDrag\", \"onDragEnd\", \"onMeasureDragConstraints\", \"onDirectionLock\", \"onDragTransitionEnd\", \"drag\", \"dragControls\", \"dragListener\", \"dragConstraints\", \"dragDirectionLock\", \"dragSnapToOrigin\", \"_dragX\", \"_dragY\", \"dragElastic\", \"dragMomentum\", \"dragPropagation\", \"dragTransition\", \"onHoverStart\", \"onHoverEnd\", \"layoutScroll\", ...inViewProps, ...tapProps, ...animationProps, ...panProps]);\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\nfunction isValidMotionProp(key) {\n  return validMotionProps.has(key);\n}\nexport { isValidMotionProp };","map":{"version":3,"names":["animationProps","tapProps","panProps","inViewProps","validMotionProps","Set","isValidMotionProp","key","has"],"sources":["F:/fyp/Ecommerce-Virtual-Reality-based-Web-Application/FrontEnd/node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs"],"sourcesContent":["const animationProps = [\r\n    \"animate\",\r\n    \"exit\",\r\n    \"variants\",\r\n    \"whileHover\",\r\n    \"whileTap\",\r\n    \"whileFocus\",\r\n    \"whileDrag\",\r\n    \"whileInView\",\r\n];\r\nconst tapProps = [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"];\r\nconst panProps = [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"];\r\nconst inViewProps = [\r\n    \"whileInView\",\r\n    \"onViewportEnter\",\r\n    \"onViewportLeave\",\r\n    \"viewport\",\r\n];\r\n/**\r\n * A list of all valid MotionProps.\r\n *\r\n * @privateRemarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\r\nconst validMotionProps = new Set([\r\n    \"initial\",\r\n    \"style\",\r\n    \"values\",\r\n    \"variants\",\r\n    \"transition\",\r\n    \"transformTemplate\",\r\n    \"transformValues\",\r\n    \"custom\",\r\n    \"inherit\",\r\n    \"layout\",\r\n    \"layoutId\",\r\n    \"layoutDependency\",\r\n    \"onLayoutAnimationStart\",\r\n    \"onLayoutAnimationComplete\",\r\n    \"onLayoutMeasure\",\r\n    \"onBeforeLayoutMeasure\",\r\n    \"onAnimationStart\",\r\n    \"onAnimationComplete\",\r\n    \"onUpdate\",\r\n    \"onDragStart\",\r\n    \"onDrag\",\r\n    \"onDragEnd\",\r\n    \"onMeasureDragConstraints\",\r\n    \"onDirectionLock\",\r\n    \"onDragTransitionEnd\",\r\n    \"drag\",\r\n    \"dragControls\",\r\n    \"dragListener\",\r\n    \"dragConstraints\",\r\n    \"dragDirectionLock\",\r\n    \"dragSnapToOrigin\",\r\n    \"_dragX\",\r\n    \"_dragY\",\r\n    \"dragElastic\",\r\n    \"dragMomentum\",\r\n    \"dragPropagation\",\r\n    \"dragTransition\",\r\n    \"onHoverStart\",\r\n    \"onHoverEnd\",\r\n    \"layoutScroll\",\r\n    ...inViewProps,\r\n    ...tapProps,\r\n    ...animationProps,\r\n    ...panProps,\r\n]);\r\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\r\nfunction isValidMotionProp(key) {\r\n    return validMotionProps.has(key);\r\n}\r\n\r\nexport { isValidMotionProp };\r\n"],"mappings":"AAAA,MAAMA,cAAc,GAAG,CACnB,SAAS,EACT,MAAM,EACN,UAAU,EACV,YAAY,EACZ,UAAU,EACV,YAAY,EACZ,WAAW,EACX,aAAa,CAChB;AACD,MAAMC,QAAQ,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,aAAa,CAAC;AACnE,MAAMC,QAAQ,GAAG,CAAC,OAAO,EAAE,YAAY,EAAE,mBAAmB,EAAE,UAAU,CAAC;AACzE,MAAMC,WAAW,GAAG,CAChB,aAAa,EACb,iBAAiB,EACjB,iBAAiB,EACjB,UAAU,CACb;AACD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,gBAAgB,GAAG,IAAIC,GAAG,CAAC,CAC7B,SAAS,EACT,OAAO,EACP,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,mBAAmB,EACnB,iBAAiB,EACjB,QAAQ,EACR,SAAS,EACT,QAAQ,EACR,UAAU,EACV,kBAAkB,EAClB,wBAAwB,EACxB,2BAA2B,EAC3B,iBAAiB,EACjB,uBAAuB,EACvB,kBAAkB,EAClB,qBAAqB,EACrB,UAAU,EACV,aAAa,EACb,QAAQ,EACR,WAAW,EACX,0BAA0B,EAC1B,iBAAiB,EACjB,qBAAqB,EACrB,MAAM,EACN,cAAc,EACd,cAAc,EACd,iBAAiB,EACjB,mBAAmB,EACnB,kBAAkB,EAClB,QAAQ,EACR,QAAQ,EACR,aAAa,EACb,cAAc,EACd,iBAAiB,EACjB,gBAAgB,EAChB,cAAc,EACd,YAAY,EACZ,cAAc,EACd,GAAGF,WAAW,EACd,GAAGF,QAAQ,EACX,GAAGD,cAAc,EACjB,GAAGE,QAAQ,CACd,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,iBAAiB,CAACC,GAAG,EAAE;EAC5B,OAAOH,gBAAgB,CAACI,GAAG,CAACD,GAAG,CAAC;AACpC;AAEA,SAASD,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}